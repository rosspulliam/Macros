|--------------------------------|
|- e3.mac	v6.0				-|
|- Written by Killians of PEQ.	-|
|- Rework  by Creamo of PEQ.	-|
|--------------------------------|

|default turbo, class specific turbo is loaded in e3_setup call
#turbo 100
#chat group
#chat tell
#include e3 Includes\e3_Setup.inc

SUB Main(modeSelect)
  /declare macroVersion string outer 6.0
  /call e3_Setup "${modeSelect}"

  /declare i int local
:MainLoop
/if (${Debug}) /echo |- MainLoop ==>
  |190 is loading
	/if (${Zone.ID}==190) /endmacro
|	************************************************************************************	|
| ******************************* Background Functions *******************************	|
|	************************************************************************************	|

		/if (${ActionTaken})                /varset ActionTaken FALSE
		/if (${currentZone} != ${Zone.ID})  /call check_Zone
		/if (${Following} && !${Assisting}) /call check_Follow
		/call check_Active
		/call check_Idle

		/if (${lifeSupport2D.Size[1]} && ${Me.PctHPs} <=80) /call check_lifeSupport
    |workaround for item cast array
    /if (${reloadOnLoot}) /call reloadSpellArrays

		/call Background_Events

		| If I'm not active, call mainFunctions
		/if (!${activeTimer}) {
      /if (!${Assisting} && (!${Me.Casting.ID} || ${Me.Class.ShortName.Equal[Brd]})) /call completePendingExchange

      |These are functions in the e3_setup/Advanced.ini class sections... CLR Function#1=check_DivineArb
			/for i 1 to ${mainLoop_Array.Size}
				/if (${Bool[${mainLoop_Array[${i}]}]}) /call ${mainLoop_Array[${i}]}
			/if (!${ActionTaken}) /next i

			| MedBreak
			/if (${medBreak}) /call check_MedBreak
			| Maintain macro timers
			/if (${timerArray.Size}) /call check_macroTimers
		}
|/echo main ${Time}
/if (${Debug}) {
	/echo <== MainLoop -|
	/delay 5
}
/goto :MainLoop	
/RETURN

|--------------------------------------------------------------------------------------------------------------------|
|- Background events and functions that are checked even while casting or otherwise considered active.		   		-|
|--------------------------------------------------------------------------------------------------------------------|
|- This function is checked constantly, included events and functions should have minimal character interaction.	-|
|--------------------------------------------------------------------------------------------------------------------|
|    These are functions in the e3_setup Included Setups section
SUB Background_Events
 | /echo bgs ${Time}
  /call alerts_Background_Events
  /call vetAA_Background_Events
  /call check_autoTribute

	/declare i int local
	/for i 1 to ${macroSetups.Size}
		/if (${Bool[${macroSetups[${i}]}]}) /call ${macroSetups[${i}]}_Background_Events
  /next i

  |/echo doevents s ${Time}
  |/doevents
  |/echo doevents e ${Time}

  |alerts - 25 events +
	|#1" background - 2 events, 2x flush doevents
	|#2" basics  ~ 30 events
	|#3" casting - 0 events
	|#4" begForBuffs - 4 events
	|#5" buffCheck - 4 events
	|#6" buy - 1 events
	|#7" pet - 3 events
	|#8" heal - 1 events
	|#9" healChain - 1 events
	|#10" assist ~ 15 events
	|#11" class - varies
	|#12" corpseSummon - 0 events
	|#13" loot - 0 events
	|#14" sell - 0 events
	|#15" smoothMoves - 0 events
	|#16" Wait4Rez - 0 events
	|#17" cures - 0 events
/RETURN

|- if e3 is started while you have not equipped, item casting will break as the item cant be found on your corpse
|- this hook from e3.mac reloads spell arrays after the player is equipped (a level 50 with a chest = assume equipped)
SUB reloadSpellArrays
  /if (${Bool[${FindItem[=${missingSpellItem}].ID}]}) {
    /varset reloadOnLoot FALSE
    /varset missingSpellItem 0
    /call buff_SpellArrays
    /call heal_SpellArrays
    /call assist_SpellArrays
    /call pet_spellArrays
    /call cure_spellArrays
  }
/RETURN